<Window x:Class="Chess.StartWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Chess Start" 
        Height="700" Width="900" MinHeight="600" MinWidth="800"
        Icon="pics/icon.ico"
        Background="#222">

    <!-- Styling for each window element -->
    <Window.Resources>
        <!-- Player choise button container -->
        <Style x:Key="SegmentedControlContainerStyle" TargetType="Border">
            <Setter Property="Background" Value="#FF3C3C3C"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <!-- Player coise button -->
        <Style x:Key="SegmentedControlRadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Foreground" Value="#FFCCCCCC"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="ButtonBorder" Value="#FF5A5A5A"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#FF4A4A4A"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Text block -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <!-- Styles for combo box -->
        <SolidColorBrush x:Key="ComboBoxBackgroundBrush" Color="#FF3C3C3C"/>
        <SolidColorBrush x:Key="ComboBoxBorderBrush" Color="#FF5A5A5A"/>
        <SolidColorBrush x:Key="ComboBoxHoverBackgroundBrush" Color="#FF4A4A4A"/>
        <SolidColorBrush x:Key="ComboBoxPopupBackgroundBrush" Color="#FF3C3C3C"/>
        <SolidColorBrush x:Key="ComboBoxItemSelectedBackgroundBrush" Color="#FF5A5A5A"/>
        <SolidColorBrush x:Key="ComboBoxItemSelectedForegroundBrush" Color="White"/>
        <SolidColorBrush x:Key="ComboBoxItemHoverBackgroundBrush" Color="#FF4A4A4A"/>
        <SolidColorBrush x:Key="ComboBoxItemHoverForegroundBrush" Color="White"/>

        <!-- Items in combo box -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="#FFCCCCCC"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Bd" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItemSelectedBackgroundBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource ComboBoxItemSelectedForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItemHoverBackgroundBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource ComboBoxItemHoverForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Combo box toggle buttons -->
        <Style x:Key="ComboBoxToggleButtonSleekStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ComboBox}}" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ComboBox}}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=ComboBox}}" CornerRadius="4" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderThickness="0" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.5,3 L 5,0 Z" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ComboBox}}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBoxHoverBackgroundBrush}"/>
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBackgroundBrush}"/>
                                <Setter TargetName="arrow" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="arrow" Property="Fill" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Combo box itself -->
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="#FFDDDDDD"/>
            <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="dropDownBorder" Background="{StaticResource ComboBoxPopupBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource ComboBoxBorderBrush}" CornerRadius="4" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonSleekStyle}"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_Popup" Property="Placement" Value="Bottom"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource ComboBoxHoverBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.6"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Width" Value="180"/>
            <Setter Property="Margin" Value="0,5,0,10"/>
        </Style>

        <!-- Button style -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#FF5A5A5A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF777777"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="MinWidth" Value="140"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="15,5"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF6A6A6A"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF888888"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF4A4A4A"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.6"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Header style -->
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
    </Window.Resources>

    <!-- Wrap window elements to allow stretch -->
    <Viewbox Stretch="Uniform">
        <Grid Width="850" Height="650">
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" >
                <TextBlock Text="Welcome to Chess!" Foreground="White" FontSize="36" HorizontalAlignment="Center" Margin="0,0,0,40"/>
                <Grid Margin="0,0,0,30">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Left player settings (bottom) -->
                    <StackPanel Grid.Column="0" HorizontalAlignment="Center" Margin="10,0">
                        <TextBlock x:Name="LeftHeaderLabel" Text="White" Style="{StaticResource HeaderTextStyle}"/>
                        <Border Style="{StaticResource SegmentedControlContainerStyle}" Margin="0,0,0,15">
                            <StackPanel Orientation="Horizontal">
                                <RadioButton x:Name="LeftHumanRadio" Content="Human" GroupName="LeftPlayerType" Style="{StaticResource SegmentedControlRadioButtonStyle}" IsChecked="True" Checked="PlayerType_Changed"/>
                                <RadioButton x:Name="LeftEngineRadio" Content="Engine" GroupName="LeftPlayerType" Style="{StaticResource SegmentedControlRadioButtonStyle}" Checked="PlayerType_Changed"/>
                            </StackPanel>
                        </Border>
                        <TextBlock x:Name="LeftAIDifficultyLabel" Text="AI Difficulty" HorizontalAlignment="Center" Margin="0,10,0,5" Visibility="Collapsed"/>
                        <ComboBox x:Name="LeftAIDifficultyComboBox" HorizontalAlignment="Center" Visibility="Collapsed">
                            <ComboBoxItem Content="Easy"/>
                            <ComboBoxItem Content="Medium" IsSelected="True"/>
                            <ComboBoxItem Content="Hard"/>
                        </ComboBox>
                    </StackPanel>

                    <!-- Player switch button -->
                    <Button Grid.Column="1" x:Name="SwitchSidesButton" Content="&#x21C4;" FontSize="30" VerticalAlignment="Top" Margin="0,-14,0,0" Padding="8" FontWeight="Bold" ToolTip="Switch Sides" BorderThickness="0" Background="Transparent" Foreground="White" Cursor="Hand" Click="SwitchSides_Click" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>

                    <!-- Right player settings (top) -->
                    <StackPanel Grid.Column="2" HorizontalAlignment="Center" Margin="10,0">
                        <TextBlock x:Name="RightHeaderLabel" Text="Black" Style="{StaticResource HeaderTextStyle}"/>
                        <Border Style="{StaticResource SegmentedControlContainerStyle}" Margin="0,0,0,15">
                            <StackPanel Orientation="Horizontal">
                                <RadioButton x:Name="RightHumanRadio" Content="Human" GroupName="RightPlayerType" Style="{StaticResource SegmentedControlRadioButtonStyle}" IsChecked="True" Checked="PlayerType_Changed"/>
                                <RadioButton x:Name="RightEngineRadio" Content="Engine" GroupName="RightPlayerType" Style="{StaticResource SegmentedControlRadioButtonStyle}" Checked="PlayerType_Changed"/>
                            </StackPanel>
                        </Border>
                        <TextBlock x:Name="RightAIDifficultyLabel" Text="AI Difficulty" HorizontalAlignment="Center" Margin="0,10,0,5" Visibility="Collapsed"/>
                        <ComboBox x:Name="RightAIDifficultyComboBox" HorizontalAlignment="Center" Visibility="Collapsed">
                            <ComboBoxItem Content="Easy"/>
                            <ComboBoxItem Content="Medium" IsSelected="True"/>
                            <ComboBoxItem Content="Hard"/>
                        </ComboBox>
                    </StackPanel>
                </Grid>

                <!-- Timer slider -->
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,30,0,0">
                    <TextBlock x:Name="SelectionTextBlock" Text="Select Timer (minutes):" FontSize="18" HorizontalAlignment="Center" Margin="0,0,0,8"/>
                    <Slider x:Name="TimerSlider" Width="400" Minimum="1" Maximum="60" Value="10" TickFrequency="1" IsSnapToTickEnabled="True" ValueChanged="TimerSlider_ValueChanged" Margin="0,0,0,8" />
                    <TextBlock x:Name="TimerValueTextBlock" Text="{Binding ElementName=TimerSlider, Path=Value, StringFormat={}{0} min}" FontSize="18" HorizontalAlignment="Center" Margin="0,0,0,30"/>
                </StackPanel>

                <!-- Start/exit buttons -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button x:Name="StartGameButton" Content="Start Game" Click="StartGame_Click"/>
                    <Button Content="Exit" Click="Exit_Click"/>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Viewbox>
</Window>
